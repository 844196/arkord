name: CI (App)

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - '.github/workflows/ci_app.yml'
  pull_request:
    paths:
      - 'app/**'
      - '.github/workflows/ci_app.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci_app:
    name: CI (Code)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read node version from Dockerfile
        run: echo ::set-output name=node_version::$(grep -P -o '(?<=node:)[0-9]+\.[0-9]+\.[0-9]+' Dockerfile)
        id: node_version

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.node_version.outputs.node_version }}
          cache: npm
          cache-dependency-path: app/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run build
        run: npm run build

  ci_docker:
    name: CI (Docker)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v2.1.0
        with:
          dockerfile: app/Dockerfile

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Compute metadata (tags, labels) for image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # set short sha tag
            type=sha

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: app
          cache-from: type=gha,scope=ci_app
          cache-to: type=gha,mode=max,scope=ci_app
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: false
