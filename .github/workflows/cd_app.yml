name: CD (App)

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - '.github/workflows/cd_app.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish-image:
    name: Publish image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app
    outputs:
      image-name: ${{ steps.image-name.outputs.sha-tagged }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Compute metadata (tags, labels) for image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # set short sha tag
            type=sha

      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: app
          cache-from: type=gha,scope=cd_app
          cache-to: type=gha,mode=max,scope=cd_app
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true

      - name: Compute published image name (SHA tagged)
        id: image-name
        run: |
          TMP_META_JSON=$(mktemp)
          echo '${{ steps.meta.outputs.json }}' > $TMP_META_JSON
          echo ::set-output name=sha-tagged::$(jq -r '.tags[] | select("sha-")' $TMP_META_JSON)

  update-service:
    name: Update service
    runs-on: ubuntu-latest
    needs: publish-image
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Update container image
        run: |
          TMP_CDK_JSON=$(mktemp)
          jq '.context.appContainerImage|="${{ needs.publish-image.outputs.image-name }}"' cdk.json > $TMP_CDK_JSON
          cat $TMP_CDK_JSON > cdk.json
          npx -y -- prettier -w cdk.json

      - name: Create pull request
        id: pr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PAT }}
          add-paths: |
            cdk.json
          commit-message: ':rocket: Deploy `${{ needs.publish-image.outputs.image-name }}`'
          base: main
          branch: github/main/release
          branch-suffix: short-commit-hash
          delete-branch: true
          title: ':rocket: Deploy `${{ needs.publish-image.outputs.image-name }}`'
